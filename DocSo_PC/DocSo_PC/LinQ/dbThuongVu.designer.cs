#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DocSo_PC.LinQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KTKS_DonKH")]
	public partial class dbThuongVuDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBanGiamDoc(BanGiamDoc instance);
    partial void UpdateBanGiamDoc(BanGiamDoc instance);
    partial void DeleteBanGiamDoc(BanGiamDoc instance);
    #endregion
		
		public dbThuongVuDataContext() : 
				base(global::DocSo_PC.Properties.Settings.Default.KTKS_DonKHConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbThuongVuDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbThuongVuDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbThuongVuDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbThuongVuDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BanGiamDoc> BanGiamDocs
		{
			get
			{
				return this.GetTable<BanGiamDoc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BanGiamDoc")]
	public partial class BanGiamDoc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaBGD;
		
		private string _ChucVu;
		
		private string _HoTen;
		
		private bool _KyTen;
		
		private bool _KyTenDuyet;
		
		private bool _An;
		
		private System.Nullable<System.DateTime> _CreateDate;
		
		private System.Nullable<int> _CreateBy;
		
		private System.Nullable<System.DateTime> _ModifyDate;
		
		private System.Nullable<int> _ModifyBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaBGDChanging(int value);
    partial void OnMaBGDChanged();
    partial void OnChucVuChanging(string value);
    partial void OnChucVuChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnKyTenChanging(bool value);
    partial void OnKyTenChanged();
    partial void OnKyTenDuyetChanging(bool value);
    partial void OnKyTenDuyetChanged();
    partial void OnAnChanging(bool value);
    partial void OnAnChanged();
    partial void OnCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDateChanged();
    partial void OnCreateByChanging(System.Nullable<int> value);
    partial void OnCreateByChanged();
    partial void OnModifyDateChanging(System.Nullable<System.DateTime> value);
    partial void OnModifyDateChanged();
    partial void OnModifyByChanging(System.Nullable<int> value);
    partial void OnModifyByChanged();
    #endregion
		
		public BanGiamDoc()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBGD", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaBGD
		{
			get
			{
				return this._MaBGD;
			}
			set
			{
				if ((this._MaBGD != value))
				{
					this.OnMaBGDChanging(value);
					this.SendPropertyChanging();
					this._MaBGD = value;
					this.SendPropertyChanged("MaBGD");
					this.OnMaBGDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChucVu", DbType="NVarChar(100)")]
		public string ChucVu
		{
			get
			{
				return this._ChucVu;
			}
			set
			{
				if ((this._ChucVu != value))
				{
					this.OnChucVuChanging(value);
					this.SendPropertyChanging();
					this._ChucVu = value;
					this.SendPropertyChanged("ChucVu");
					this.OnChucVuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KyTen", DbType="Bit NOT NULL")]
		public bool KyTen
		{
			get
			{
				return this._KyTen;
			}
			set
			{
				if ((this._KyTen != value))
				{
					this.OnKyTenChanging(value);
					this.SendPropertyChanging();
					this._KyTen = value;
					this.SendPropertyChanged("KyTen");
					this.OnKyTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KyTenDuyet", DbType="Bit NOT NULL")]
		public bool KyTenDuyet
		{
			get
			{
				return this._KyTenDuyet;
			}
			set
			{
				if ((this._KyTenDuyet != value))
				{
					this.OnKyTenDuyetChanging(value);
					this.SendPropertyChanging();
					this._KyTenDuyet = value;
					this.SendPropertyChanged("KyTenDuyet");
					this.OnKyTenDuyetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_An", DbType="Bit NOT NULL")]
		public bool An
		{
			get
			{
				return this._An;
			}
			set
			{
				if ((this._An != value))
				{
					this.OnAnChanging(value);
					this.SendPropertyChanging();
					this._An = value;
					this.SendPropertyChanged("An");
					this.OnAnChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDate
		{
			get
			{
				return this._CreateDate;
			}
			set
			{
				if ((this._CreateDate != value))
				{
					this.OnCreateDateChanging(value);
					this.SendPropertyChanging();
					this._CreateDate = value;
					this.SendPropertyChanged("CreateDate");
					this.OnCreateDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreateBy", DbType="Int")]
		public System.Nullable<int> CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ModifyDate
		{
			get
			{
				return this._ModifyDate;
			}
			set
			{
				if ((this._ModifyDate != value))
				{
					this.OnModifyDateChanging(value);
					this.SendPropertyChanging();
					this._ModifyDate = value;
					this.SendPropertyChanged("ModifyDate");
					this.OnModifyDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ModifyBy", DbType="Int")]
		public System.Nullable<int> ModifyBy
		{
			get
			{
				return this._ModifyBy;
			}
			set
			{
				if ((this._ModifyBy != value))
				{
					this.OnModifyByChanging(value);
					this.SendPropertyChanging();
					this._ModifyBy = value;
					this.SendPropertyChanged("ModifyBy");
					this.OnModifyByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
