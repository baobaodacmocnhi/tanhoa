//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KTKS_DonKH.wrEContract {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="wsEContractSoap", Namespace="http://tempuri.org/")]
    public partial class wsEContract : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getAccess_tokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccess_token_ClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccess_token_UserOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAccess_token_DuyetOperationCompleted;
        
        private System.Threading.SendOrPostCallback renderEContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback createEContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendEContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback editEContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback editEContract_NgayHieuLucOperationCompleted;
        
        private System.Threading.SendOrPostCallback editEContract2OperationCompleted;
        
        private System.Threading.SendOrPostCallback cancelEContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback deleteEContractOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateDoiTacOperationCompleted;
        
        private System.Threading.SendOrPostCallback duyetKhongKyOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public wsEContract() {
            this.Url = global::KTKS_DonKH.Properties.Settings.Default.KTKS_DonKH_wrEContract_wsEContract;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getAccess_tokenCompletedEventHandler getAccess_tokenCompleted;
        
        /// <remarks/>
        public event getAccess_token_ClientCompletedEventHandler getAccess_token_ClientCompleted;
        
        /// <remarks/>
        public event getAccess_token_UserCompletedEventHandler getAccess_token_UserCompleted;
        
        /// <remarks/>
        public event getAccess_token_DuyetCompletedEventHandler getAccess_token_DuyetCompleted;
        
        /// <remarks/>
        public event renderEContractCompletedEventHandler renderEContractCompleted;
        
        /// <remarks/>
        public event createEContractCompletedEventHandler createEContractCompleted;
        
        /// <remarks/>
        public event sendEContractCompletedEventHandler sendEContractCompleted;
        
        /// <remarks/>
        public event editEContractCompletedEventHandler editEContractCompleted;
        
        /// <remarks/>
        public event editEContract_NgayHieuLucCompletedEventHandler editEContract_NgayHieuLucCompleted;
        
        /// <remarks/>
        public event editEContract2CompletedEventHandler editEContract2Completed;
        
        /// <remarks/>
        public event cancelEContractCompletedEventHandler cancelEContractCompleted;
        
        /// <remarks/>
        public event deleteEContractCompletedEventHandler deleteEContractCompleted;
        
        /// <remarks/>
        public event updateDoiTacCompletedEventHandler updateDoiTacCompleted;
        
        /// <remarks/>
        public event duyetKhongKyCompletedEventHandler duyetKhongKyCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccess_token", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getAccess_token(string checksum) {
            object[] results = this.Invoke("getAccess_token", new object[] {
                        checksum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getAccess_tokenAsync(string checksum) {
            this.getAccess_tokenAsync(checksum, null);
        }
        
        /// <remarks/>
        public void getAccess_tokenAsync(string checksum, object userState) {
            if ((this.getAccess_tokenOperationCompleted == null)) {
                this.getAccess_tokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccess_tokenOperationCompleted);
            }
            this.InvokeAsync("getAccess_token", new object[] {
                        checksum}, this.getAccess_tokenOperationCompleted, userState);
        }
        
        private void OngetAccess_tokenOperationCompleted(object arg) {
            if ((this.getAccess_tokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccess_tokenCompleted(this, new getAccess_tokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccess_token_Client", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getAccess_token_Client(string checksum) {
            object[] results = this.Invoke("getAccess_token_Client", new object[] {
                        checksum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getAccess_token_ClientAsync(string checksum) {
            this.getAccess_token_ClientAsync(checksum, null);
        }
        
        /// <remarks/>
        public void getAccess_token_ClientAsync(string checksum, object userState) {
            if ((this.getAccess_token_ClientOperationCompleted == null)) {
                this.getAccess_token_ClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccess_token_ClientOperationCompleted);
            }
            this.InvokeAsync("getAccess_token_Client", new object[] {
                        checksum}, this.getAccess_token_ClientOperationCompleted, userState);
        }
        
        private void OngetAccess_token_ClientOperationCompleted(object arg) {
            if ((this.getAccess_token_ClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccess_token_ClientCompleted(this, new getAccess_token_ClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccess_token_User", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getAccess_token_User(string checksum) {
            object[] results = this.Invoke("getAccess_token_User", new object[] {
                        checksum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getAccess_token_UserAsync(string checksum) {
            this.getAccess_token_UserAsync(checksum, null);
        }
        
        /// <remarks/>
        public void getAccess_token_UserAsync(string checksum, object userState) {
            if ((this.getAccess_token_UserOperationCompleted == null)) {
                this.getAccess_token_UserOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccess_token_UserOperationCompleted);
            }
            this.InvokeAsync("getAccess_token_User", new object[] {
                        checksum}, this.getAccess_token_UserOperationCompleted, userState);
        }
        
        private void OngetAccess_token_UserOperationCompleted(object arg) {
            if ((this.getAccess_token_UserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccess_token_UserCompleted(this, new getAccess_token_UserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/getAccess_token_Duyet", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool getAccess_token_Duyet(string checksum) {
            object[] results = this.Invoke("getAccess_token_Duyet", new object[] {
                        checksum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void getAccess_token_DuyetAsync(string checksum) {
            this.getAccess_token_DuyetAsync(checksum, null);
        }
        
        /// <remarks/>
        public void getAccess_token_DuyetAsync(string checksum, object userState) {
            if ((this.getAccess_token_DuyetOperationCompleted == null)) {
                this.getAccess_token_DuyetOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAccess_token_DuyetOperationCompleted);
            }
            this.InvokeAsync("getAccess_token_Duyet", new object[] {
                        checksum}, this.getAccess_token_DuyetOperationCompleted, userState);
        }
        
        private void OngetAccess_token_DuyetOperationCompleted(object arg) {
            if ((this.getAccess_token_DuyetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAccess_token_DuyetCompleted(this, new getAccess_token_DuyetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/renderEContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] renderEContract(
                    string HopDong, 
                    string DanhBo, 
                    System.DateTime CreateDate, 
                    string HoTen, 
                    string CCCD, 
                    string NgayCap, 
                    string DCThuongTru, 
                    string DCHienNay, 
                    string DienThoai, 
                    string Fax, 
                    string Email, 
                    string TaiKhoan, 
                    string Bank, 
                    string MST, 
                    string CoDHN, 
                    string DCLapDat, 
                    string NgayHieuLuc, 
                    string checksum, 
                    out string strResponse) {
            object[] results = this.Invoke("renderEContract", new object[] {
                        HopDong,
                        DanhBo,
                        CreateDate,
                        HoTen,
                        CCCD,
                        NgayCap,
                        DCThuongTru,
                        DCHienNay,
                        DienThoai,
                        Fax,
                        Email,
                        TaiKhoan,
                        Bank,
                        MST,
                        CoDHN,
                        DCLapDat,
                        NgayHieuLuc,
                        checksum});
            strResponse = ((string)(results[1]));
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void renderEContractAsync(
                    string HopDong, 
                    string DanhBo, 
                    System.DateTime CreateDate, 
                    string HoTen, 
                    string CCCD, 
                    string NgayCap, 
                    string DCThuongTru, 
                    string DCHienNay, 
                    string DienThoai, 
                    string Fax, 
                    string Email, 
                    string TaiKhoan, 
                    string Bank, 
                    string MST, 
                    string CoDHN, 
                    string DCLapDat, 
                    string NgayHieuLuc, 
                    string checksum) {
            this.renderEContractAsync(HopDong, DanhBo, CreateDate, HoTen, CCCD, NgayCap, DCThuongTru, DCHienNay, DienThoai, Fax, Email, TaiKhoan, Bank, MST, CoDHN, DCLapDat, NgayHieuLuc, checksum, null);
        }
        
        /// <remarks/>
        public void renderEContractAsync(
                    string HopDong, 
                    string DanhBo, 
                    System.DateTime CreateDate, 
                    string HoTen, 
                    string CCCD, 
                    string NgayCap, 
                    string DCThuongTru, 
                    string DCHienNay, 
                    string DienThoai, 
                    string Fax, 
                    string Email, 
                    string TaiKhoan, 
                    string Bank, 
                    string MST, 
                    string CoDHN, 
                    string DCLapDat, 
                    string NgayHieuLuc, 
                    string checksum, 
                    object userState) {
            if ((this.renderEContractOperationCompleted == null)) {
                this.renderEContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenderEContractOperationCompleted);
            }
            this.InvokeAsync("renderEContract", new object[] {
                        HopDong,
                        DanhBo,
                        CreateDate,
                        HoTen,
                        CCCD,
                        NgayCap,
                        DCThuongTru,
                        DCHienNay,
                        DienThoai,
                        Fax,
                        Email,
                        TaiKhoan,
                        Bank,
                        MST,
                        CoDHN,
                        DCLapDat,
                        NgayHieuLuc,
                        checksum}, this.renderEContractOperationCompleted, userState);
        }
        
        private void OnrenderEContractOperationCompleted(object arg) {
            if ((this.renderEContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renderEContractCompleted(this, new renderEContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/createEContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool createEContract(
                    string HopDong, 
                    string DanhBo, 
                    System.DateTime CreateDate, 
                    string HoTen, 
                    string CCCD, 
                    string NgayCap, 
                    string DCThuongTru, 
                    string DCHienNay, 
                    string DienThoai, 
                    string Fax, 
                    string Email, 
                    string TaiKhoan, 
                    string Bank, 
                    string MST, 
                    string CoDHN, 
                    string DCLapDat, 
                    string NgayHieuLuc, 
                    bool GanMoi, 
                    bool CaNhan, 
                    string MaDon, 
                    string SHS, 
                    string checksum, 
                    out string strResponse) {
            object[] results = this.Invoke("createEContract", new object[] {
                        HopDong,
                        DanhBo,
                        CreateDate,
                        HoTen,
                        CCCD,
                        NgayCap,
                        DCThuongTru,
                        DCHienNay,
                        DienThoai,
                        Fax,
                        Email,
                        TaiKhoan,
                        Bank,
                        MST,
                        CoDHN,
                        DCLapDat,
                        NgayHieuLuc,
                        GanMoi,
                        CaNhan,
                        MaDon,
                        SHS,
                        checksum});
            strResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void createEContractAsync(
                    string HopDong, 
                    string DanhBo, 
                    System.DateTime CreateDate, 
                    string HoTen, 
                    string CCCD, 
                    string NgayCap, 
                    string DCThuongTru, 
                    string DCHienNay, 
                    string DienThoai, 
                    string Fax, 
                    string Email, 
                    string TaiKhoan, 
                    string Bank, 
                    string MST, 
                    string CoDHN, 
                    string DCLapDat, 
                    string NgayHieuLuc, 
                    bool GanMoi, 
                    bool CaNhan, 
                    string MaDon, 
                    string SHS, 
                    string checksum) {
            this.createEContractAsync(HopDong, DanhBo, CreateDate, HoTen, CCCD, NgayCap, DCThuongTru, DCHienNay, DienThoai, Fax, Email, TaiKhoan, Bank, MST, CoDHN, DCLapDat, NgayHieuLuc, GanMoi, CaNhan, MaDon, SHS, checksum, null);
        }
        
        /// <remarks/>
        public void createEContractAsync(
                    string HopDong, 
                    string DanhBo, 
                    System.DateTime CreateDate, 
                    string HoTen, 
                    string CCCD, 
                    string NgayCap, 
                    string DCThuongTru, 
                    string DCHienNay, 
                    string DienThoai, 
                    string Fax, 
                    string Email, 
                    string TaiKhoan, 
                    string Bank, 
                    string MST, 
                    string CoDHN, 
                    string DCLapDat, 
                    string NgayHieuLuc, 
                    bool GanMoi, 
                    bool CaNhan, 
                    string MaDon, 
                    string SHS, 
                    string checksum, 
                    object userState) {
            if ((this.createEContractOperationCompleted == null)) {
                this.createEContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateEContractOperationCompleted);
            }
            this.InvokeAsync("createEContract", new object[] {
                        HopDong,
                        DanhBo,
                        CreateDate,
                        HoTen,
                        CCCD,
                        NgayCap,
                        DCThuongTru,
                        DCHienNay,
                        DienThoai,
                        Fax,
                        Email,
                        TaiKhoan,
                        Bank,
                        MST,
                        CoDHN,
                        DCLapDat,
                        NgayHieuLuc,
                        GanMoi,
                        CaNhan,
                        MaDon,
                        SHS,
                        checksum}, this.createEContractOperationCompleted, userState);
        }
        
        private void OncreateEContractOperationCompleted(object arg) {
            if ((this.createEContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createEContractCompleted(this, new createEContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/sendEContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool sendEContract(string MaDon, string SHS, string checksum, out string strResponse) {
            object[] results = this.Invoke("sendEContract", new object[] {
                        MaDon,
                        SHS,
                        checksum});
            strResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void sendEContractAsync(string MaDon, string SHS, string checksum) {
            this.sendEContractAsync(MaDon, SHS, checksum, null);
        }
        
        /// <remarks/>
        public void sendEContractAsync(string MaDon, string SHS, string checksum, object userState) {
            if ((this.sendEContractOperationCompleted == null)) {
                this.sendEContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendEContractOperationCompleted);
            }
            this.InvokeAsync("sendEContract", new object[] {
                        MaDon,
                        SHS,
                        checksum}, this.sendEContractOperationCompleted, userState);
        }
        
        private void OnsendEContractOperationCompleted(object arg) {
            if ((this.sendEContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendEContractCompleted(this, new sendEContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editEContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool editEContract(string MaDon, string SHS, string checksum, out string strResponse) {
            object[] results = this.Invoke("editEContract", new object[] {
                        MaDon,
                        SHS,
                        checksum});
            strResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void editEContractAsync(string MaDon, string SHS, string checksum) {
            this.editEContractAsync(MaDon, SHS, checksum, null);
        }
        
        /// <remarks/>
        public void editEContractAsync(string MaDon, string SHS, string checksum, object userState) {
            if ((this.editEContractOperationCompleted == null)) {
                this.editEContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditEContractOperationCompleted);
            }
            this.InvokeAsync("editEContract", new object[] {
                        MaDon,
                        SHS,
                        checksum}, this.editEContractOperationCompleted, userState);
        }
        
        private void OneditEContractOperationCompleted(object arg) {
            if ((this.editEContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editEContractCompleted(this, new editEContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editEContract_NgayHieuLuc", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool editEContract_NgayHieuLuc(string MaDon, string SHS, string checksum, out string strResponse) {
            object[] results = this.Invoke("editEContract_NgayHieuLuc", new object[] {
                        MaDon,
                        SHS,
                        checksum});
            strResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void editEContract_NgayHieuLucAsync(string MaDon, string SHS, string checksum) {
            this.editEContract_NgayHieuLucAsync(MaDon, SHS, checksum, null);
        }
        
        /// <remarks/>
        public void editEContract_NgayHieuLucAsync(string MaDon, string SHS, string checksum, object userState) {
            if ((this.editEContract_NgayHieuLucOperationCompleted == null)) {
                this.editEContract_NgayHieuLucOperationCompleted = new System.Threading.SendOrPostCallback(this.OneditEContract_NgayHieuLucOperationCompleted);
            }
            this.InvokeAsync("editEContract_NgayHieuLuc", new object[] {
                        MaDon,
                        SHS,
                        checksum}, this.editEContract_NgayHieuLucOperationCompleted, userState);
        }
        
        private void OneditEContract_NgayHieuLucOperationCompleted(object arg) {
            if ((this.editEContract_NgayHieuLucCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editEContract_NgayHieuLucCompleted(this, new editEContract_NgayHieuLucCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/editEContract2", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool editEContract2(string MaDon, string SHS, string checksum) {
            object[] results = this.Invoke("editEContract2", new object[] {
                        MaDon,
                        SHS,
                        checksum});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void editEContract2Async(string MaDon, string SHS, string checksum) {
            this.editEContract2Async(MaDon, SHS, checksum, null);
        }
        
        /// <remarks/>
        public void editEContract2Async(string MaDon, string SHS, string checksum, object userState) {
            if ((this.editEContract2OperationCompleted == null)) {
                this.editEContract2OperationCompleted = new System.Threading.SendOrPostCallback(this.OneditEContract2OperationCompleted);
            }
            this.InvokeAsync("editEContract2", new object[] {
                        MaDon,
                        SHS,
                        checksum}, this.editEContract2OperationCompleted, userState);
        }
        
        private void OneditEContract2OperationCompleted(object arg) {
            if ((this.editEContract2Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.editEContract2Completed(this, new editEContract2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/cancelEContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool cancelEContract(string MaDon, string SHS, string checksum, out string strResponse) {
            object[] results = this.Invoke("cancelEContract", new object[] {
                        MaDon,
                        SHS,
                        checksum});
            strResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void cancelEContractAsync(string MaDon, string SHS, string checksum) {
            this.cancelEContractAsync(MaDon, SHS, checksum, null);
        }
        
        /// <remarks/>
        public void cancelEContractAsync(string MaDon, string SHS, string checksum, object userState) {
            if ((this.cancelEContractOperationCompleted == null)) {
                this.cancelEContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OncancelEContractOperationCompleted);
            }
            this.InvokeAsync("cancelEContract", new object[] {
                        MaDon,
                        SHS,
                        checksum}, this.cancelEContractOperationCompleted, userState);
        }
        
        private void OncancelEContractOperationCompleted(object arg) {
            if ((this.cancelEContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cancelEContractCompleted(this, new cancelEContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/deleteEContract", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool deleteEContract(string MaDon, string SHS, string checksum, out string strResponse) {
            object[] results = this.Invoke("deleteEContract", new object[] {
                        MaDon,
                        SHS,
                        checksum});
            strResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void deleteEContractAsync(string MaDon, string SHS, string checksum) {
            this.deleteEContractAsync(MaDon, SHS, checksum, null);
        }
        
        /// <remarks/>
        public void deleteEContractAsync(string MaDon, string SHS, string checksum, object userState) {
            if ((this.deleteEContractOperationCompleted == null)) {
                this.deleteEContractOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteEContractOperationCompleted);
            }
            this.InvokeAsync("deleteEContract", new object[] {
                        MaDon,
                        SHS,
                        checksum}, this.deleteEContractOperationCompleted, userState);
        }
        
        private void OndeleteEContractOperationCompleted(object arg) {
            if ((this.deleteEContractCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.deleteEContractCompleted(this, new deleteEContractCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/updateDoiTac", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool updateDoiTac(string CCCD, string Email, string DienThoai, string HoTen, string MST, string checksum, out string strResponse) {
            object[] results = this.Invoke("updateDoiTac", new object[] {
                        CCCD,
                        Email,
                        DienThoai,
                        HoTen,
                        MST,
                        checksum});
            strResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void updateDoiTacAsync(string CCCD, string Email, string DienThoai, string HoTen, string MST, string checksum) {
            this.updateDoiTacAsync(CCCD, Email, DienThoai, HoTen, MST, checksum, null);
        }
        
        /// <remarks/>
        public void updateDoiTacAsync(string CCCD, string Email, string DienThoai, string HoTen, string MST, string checksum, object userState) {
            if ((this.updateDoiTacOperationCompleted == null)) {
                this.updateDoiTacOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateDoiTacOperationCompleted);
            }
            this.InvokeAsync("updateDoiTac", new object[] {
                        CCCD,
                        Email,
                        DienThoai,
                        HoTen,
                        MST,
                        checksum}, this.updateDoiTacOperationCompleted, userState);
        }
        
        private void OnupdateDoiTacOperationCompleted(object arg) {
            if ((this.updateDoiTacCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateDoiTacCompleted(this, new updateDoiTacCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/duyetKhongKy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool duyetKhongKy(string IDEContract, out string strResponse) {
            object[] results = this.Invoke("duyetKhongKy", new object[] {
                        IDEContract});
            strResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void duyetKhongKyAsync(string IDEContract) {
            this.duyetKhongKyAsync(IDEContract, null);
        }
        
        /// <remarks/>
        public void duyetKhongKyAsync(string IDEContract, object userState) {
            if ((this.duyetKhongKyOperationCompleted == null)) {
                this.duyetKhongKyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnduyetKhongKyOperationCompleted);
            }
            this.InvokeAsync("duyetKhongKy", new object[] {
                        IDEContract}, this.duyetKhongKyOperationCompleted, userState);
        }
        
        private void OnduyetKhongKyOperationCompleted(object arg) {
            if ((this.duyetKhongKyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.duyetKhongKyCompleted(this, new duyetKhongKyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAccess_tokenCompletedEventHandler(object sender, getAccess_tokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccess_tokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccess_tokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAccess_token_ClientCompletedEventHandler(object sender, getAccess_token_ClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccess_token_ClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccess_token_ClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAccess_token_UserCompletedEventHandler(object sender, getAccess_token_UserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccess_token_UserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccess_token_UserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void getAccess_token_DuyetCompletedEventHandler(object sender, getAccess_token_DuyetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAccess_token_DuyetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAccess_token_DuyetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void renderEContractCompletedEventHandler(object sender, renderEContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class renderEContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal renderEContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void createEContractCompletedEventHandler(object sender, createEContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createEContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createEContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void sendEContractCompletedEventHandler(object sender, sendEContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendEContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendEContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void editEContractCompletedEventHandler(object sender, editEContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editEContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editEContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void editEContract_NgayHieuLucCompletedEventHandler(object sender, editEContract_NgayHieuLucCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editEContract_NgayHieuLucCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editEContract_NgayHieuLucCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void editEContract2CompletedEventHandler(object sender, editEContract2CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class editEContract2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal editEContract2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void cancelEContractCompletedEventHandler(object sender, cancelEContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cancelEContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cancelEContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void deleteEContractCompletedEventHandler(object sender, deleteEContractCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class deleteEContractCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal deleteEContractCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void updateDoiTacCompletedEventHandler(object sender, updateDoiTacCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateDoiTacCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateDoiTacCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    public delegate void duyetKhongKyCompletedEventHandler(object sender, duyetKhongKyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9037.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class duyetKhongKyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal duyetKhongKyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strResponse {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591