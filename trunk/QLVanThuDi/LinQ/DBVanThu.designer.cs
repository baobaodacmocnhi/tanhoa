#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.5472
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QLVanThuDi.LinQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="CAPNUOCTANHOAOFFICESE2009")]
	public partial class DBVanThuDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertWF_Incoming_Doc(WF_Incoming_Doc instance);
    partial void UpdateWF_Incoming_Doc(WF_Incoming_Doc instance);
    partial void DeleteWF_Incoming_Doc(WF_Incoming_Doc instance);
    partial void InsertWF_Book(WF_Book instance);
    partial void UpdateWF_Book(WF_Book instance);
    partial void DeleteWF_Book(WF_Book instance);
    #endregion
		
		public DBVanThuDataContext() : 
				base(global::QLVanThuDi.Properties.Settings.Default.CAPNUOCTANHOAOFFICESE2009ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DBVanThuDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBVanThuDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBVanThuDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBVanThuDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<WF_Incoming_Doc> WF_Incoming_Docs
		{
			get
			{
				return this.GetTable<WF_Incoming_Doc>();
			}
		}
		
		public System.Data.Linq.Table<WF_Book> WF_Books
		{
			get
			{
				return this.GetTable<WF_Book>();
			}
		}
	}
	
	[Table(Name="dbo.WF_Incoming_Docs")]
	public partial class WF_Incoming_Doc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DocumentID;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<int> _BookID;
		
		private System.Nullable<System.DateTime> _CreatedDate;
		
		private string _DocumentNo;
		
		private System.Nullable<System.DateTime> _IssuedDate;
		
		private System.Nullable<int> _SecurityLevel;
		
		private System.Nullable<int> _Priority;
		
		private System.Nullable<int> _IssuedOrganizationGroupID;
		
		private System.Nullable<int> _IssuedOrganizationID;
		
		private System.Nullable<int> _SentOrganizationGroupID;
		
		private System.Nullable<int> _SentOrganizationID;
		
		private System.Nullable<int> _TypeID;
		
		private string _DocumentSummary;
		
		private System.Nullable<int> _UpdatedUserID;
		
		private System.Nullable<int> _CreatedUserID;
		
		private string _Signer;
		
		private string _SignerPosition;
		
		private System.Nullable<System.DateTime> _ReceivedDate;
		
		private System.Nullable<System.DateTime> _CompletedDate;
		
		private string _Note;
		
		private System.Nullable<System.DateTime> _SignedDate;
		
		private System.Nullable<int> _ImportantLevel;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _FieldID;
		
		private System.Nullable<System.DateTime> _EffectiveDate;
		
		private System.Nullable<bool> _IsApproved;
		
		private System.Nullable<int> _ResolveLevel;
		
		private System.Nullable<int> _AssignedGroupId;
		
		private System.Nullable<int> _AssignedUserID;
		
		private System.Nullable<System.DateTime> _UpdatedDate;
		
		private System.Nullable<System.DateTime> _ExpiredDate;
		
		private System.Nullable<int> _Scale;
		
		private string _Year;
		
		private string _Content;
		
		private System.Nullable<int> _StoreID;
		
		private string _DocumentOrderNo;
		
		private System.Nullable<int> _ApprovedUserID;
		
		private string _NumOfCopies;
		
		private string _NumOfArchives;
		
		private string _ReplyDocumentNo;
		
		private System.Nullable<int> _ReceivedGroupID;
		
		private System.Nullable<int> _ReceivedUserID;
		
		private System.Nullable<int> _GlobalDocumentOrderNo;
		
		private System.Nullable<bool> _IsCompleted;
		
		private string _UserGroupReceivers;
		
		private string _IndividualReceivers;
		
		private System.Nullable<System.DateTime> _LastUpdated;
		
		private string _UpdatedContent;
		
		private System.Nullable<System.DateTime> _ApprovedDate;
		
		private System.Nullable<System.DateTime> _PopupSentDate;
		
		private System.Nullable<bool> _IsPopupSent;
		
		private string _PopupIndividualReceivers;
		
		private System.Nullable<int> _PopupSentUserID;
		
		private System.Nullable<System.DateTime> _SMSSentDate;
		
		private System.Nullable<bool> _IsSMSSent;
		
		private string _SMSIndividualReceivers;
		
		private System.Nullable<int> _SMSSentUserID;
		
		private System.Nullable<bool> _IsReviewed;
		
		private System.Nullable<int> _ReviewedUserID;
		
		private string _ReviewContent;
		
		private System.Nullable<System.DateTime> _ReviewedDate;
		
		private System.Nullable<System.DateTime> _StartedDate;
		
		private string _Note2;
		
		private System.Nullable<int> _AssignedReviewedUserID;
		
		private System.Nullable<int> _DocumentOrderNo2;
		
		private System.Nullable<int> _PortalID;
		
		private string _IssuedOrganizationName2;
		
		private string _SentOrganizationName2;
		
		private string _StoreName2;
		
		private System.Nullable<int> _SupervisedUserID;
		
		private string _PortalReceivers;
		
		private System.Nullable<int> _OfficeManagerID;
		
		private System.Nullable<int> _FlowType;
		
		private string _OrgManagerSentNote;
		
		private System.Nullable<System.DateTime> _OrgManagerSentDate;
		
		private System.Nullable<bool> _IsOrgManagerSent;
		
		private System.Nullable<System.DateTime> _EffectiveDate2;
		
		private string _TaskRelatedTerms;
		
		private string _ReviewNote;
		
		private System.Nullable<int> _TaskFolderID;
		
		private System.Nullable<int> _TaskID;
		
		private System.Nullable<int> _ProjectID;
		
		private string _IndividualReceivers2;
		
		private System.Nullable<bool> _IsDist;
		
		private EntityRef<WF_Book> _WF_Book;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDocumentIDChanging(int value);
    partial void OnDocumentIDChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnBookIDChanging(System.Nullable<int> value);
    partial void OnBookIDChanged();
    partial void OnCreatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDateChanged();
    partial void OnDocumentNoChanging(string value);
    partial void OnDocumentNoChanged();
    partial void OnIssuedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnIssuedDateChanged();
    partial void OnSecurityLevelChanging(System.Nullable<int> value);
    partial void OnSecurityLevelChanged();
    partial void OnPriorityChanging(System.Nullable<int> value);
    partial void OnPriorityChanged();
    partial void OnIssuedOrganizationGroupIDChanging(System.Nullable<int> value);
    partial void OnIssuedOrganizationGroupIDChanged();
    partial void OnIssuedOrganizationIDChanging(System.Nullable<int> value);
    partial void OnIssuedOrganizationIDChanged();
    partial void OnSentOrganizationGroupIDChanging(System.Nullable<int> value);
    partial void OnSentOrganizationGroupIDChanged();
    partial void OnSentOrganizationIDChanging(System.Nullable<int> value);
    partial void OnSentOrganizationIDChanged();
    partial void OnTypeIDChanging(System.Nullable<int> value);
    partial void OnTypeIDChanged();
    partial void OnDocumentSummaryChanging(string value);
    partial void OnDocumentSummaryChanged();
    partial void OnUpdatedUserIDChanging(System.Nullable<int> value);
    partial void OnUpdatedUserIDChanged();
    partial void OnCreatedUserIDChanging(System.Nullable<int> value);
    partial void OnCreatedUserIDChanged();
    partial void OnSignerChanging(string value);
    partial void OnSignerChanged();
    partial void OnSignerPositionChanging(string value);
    partial void OnSignerPositionChanged();
    partial void OnReceivedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReceivedDateChanged();
    partial void OnCompletedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnCompletedDateChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnSignedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSignedDateChanged();
    partial void OnImportantLevelChanging(System.Nullable<int> value);
    partial void OnImportantLevelChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnFieldIDChanging(System.Nullable<int> value);
    partial void OnFieldIDChanged();
    partial void OnEffectiveDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDateChanged();
    partial void OnIsApprovedChanging(System.Nullable<bool> value);
    partial void OnIsApprovedChanged();
    partial void OnResolveLevelChanging(System.Nullable<int> value);
    partial void OnResolveLevelChanged();
    partial void OnAssignedGroupIdChanging(System.Nullable<int> value);
    partial void OnAssignedGroupIdChanged();
    partial void OnAssignedUserIDChanging(System.Nullable<int> value);
    partial void OnAssignedUserIDChanged();
    partial void OnUpdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDateChanged();
    partial void OnExpiredDateChanging(System.Nullable<System.DateTime> value);
    partial void OnExpiredDateChanged();
    partial void OnScaleChanging(System.Nullable<int> value);
    partial void OnScaleChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnContentChanging(string value);
    partial void OnContentChanged();
    partial void OnStoreIDChanging(System.Nullable<int> value);
    partial void OnStoreIDChanged();
    partial void OnDocumentOrderNoChanging(string value);
    partial void OnDocumentOrderNoChanged();
    partial void OnApprovedUserIDChanging(System.Nullable<int> value);
    partial void OnApprovedUserIDChanged();
    partial void OnNumOfCopiesChanging(string value);
    partial void OnNumOfCopiesChanged();
    partial void OnNumOfArchivesChanging(string value);
    partial void OnNumOfArchivesChanged();
    partial void OnReplyDocumentNoChanging(string value);
    partial void OnReplyDocumentNoChanged();
    partial void OnReceivedGroupIDChanging(System.Nullable<int> value);
    partial void OnReceivedGroupIDChanged();
    partial void OnReceivedUserIDChanging(System.Nullable<int> value);
    partial void OnReceivedUserIDChanged();
    partial void OnGlobalDocumentOrderNoChanging(System.Nullable<int> value);
    partial void OnGlobalDocumentOrderNoChanged();
    partial void OnIsCompletedChanging(System.Nullable<bool> value);
    partial void OnIsCompletedChanged();
    partial void OnUserGroupReceiversChanging(string value);
    partial void OnUserGroupReceiversChanged();
    partial void OnIndividualReceiversChanging(string value);
    partial void OnIndividualReceiversChanged();
    partial void OnLastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnLastUpdatedChanged();
    partial void OnUpdatedContentChanging(string value);
    partial void OnUpdatedContentChanged();
    partial void OnApprovedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnApprovedDateChanged();
    partial void OnPopupSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnPopupSentDateChanged();
    partial void OnIsPopupSentChanging(System.Nullable<bool> value);
    partial void OnIsPopupSentChanged();
    partial void OnPopupIndividualReceiversChanging(string value);
    partial void OnPopupIndividualReceiversChanged();
    partial void OnPopupSentUserIDChanging(System.Nullable<int> value);
    partial void OnPopupSentUserIDChanged();
    partial void OnSMSSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSMSSentDateChanged();
    partial void OnIsSMSSentChanging(System.Nullable<bool> value);
    partial void OnIsSMSSentChanged();
    partial void OnSMSIndividualReceiversChanging(string value);
    partial void OnSMSIndividualReceiversChanged();
    partial void OnSMSSentUserIDChanging(System.Nullable<int> value);
    partial void OnSMSSentUserIDChanged();
    partial void OnIsReviewedChanging(System.Nullable<bool> value);
    partial void OnIsReviewedChanged();
    partial void OnReviewedUserIDChanging(System.Nullable<int> value);
    partial void OnReviewedUserIDChanged();
    partial void OnReviewContentChanging(string value);
    partial void OnReviewContentChanged();
    partial void OnReviewedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnReviewedDateChanged();
    partial void OnStartedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartedDateChanged();
    partial void OnNote2Changing(string value);
    partial void OnNote2Changed();
    partial void OnAssignedReviewedUserIDChanging(System.Nullable<int> value);
    partial void OnAssignedReviewedUserIDChanged();
    partial void OnDocumentOrderNo2Changing(System.Nullable<int> value);
    partial void OnDocumentOrderNo2Changed();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    partial void OnIssuedOrganizationName2Changing(string value);
    partial void OnIssuedOrganizationName2Changed();
    partial void OnSentOrganizationName2Changing(string value);
    partial void OnSentOrganizationName2Changed();
    partial void OnStoreName2Changing(string value);
    partial void OnStoreName2Changed();
    partial void OnSupervisedUserIDChanging(System.Nullable<int> value);
    partial void OnSupervisedUserIDChanged();
    partial void OnPortalReceiversChanging(string value);
    partial void OnPortalReceiversChanged();
    partial void OnOfficeManagerIDChanging(System.Nullable<int> value);
    partial void OnOfficeManagerIDChanged();
    partial void OnFlowTypeChanging(System.Nullable<int> value);
    partial void OnFlowTypeChanged();
    partial void OnOrgManagerSentNoteChanging(string value);
    partial void OnOrgManagerSentNoteChanged();
    partial void OnOrgManagerSentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnOrgManagerSentDateChanged();
    partial void OnIsOrgManagerSentChanging(System.Nullable<bool> value);
    partial void OnIsOrgManagerSentChanged();
    partial void OnEffectiveDate2Changing(System.Nullable<System.DateTime> value);
    partial void OnEffectiveDate2Changed();
    partial void OnTaskRelatedTermsChanging(string value);
    partial void OnTaskRelatedTermsChanged();
    partial void OnReviewNoteChanging(string value);
    partial void OnReviewNoteChanged();
    partial void OnTaskFolderIDChanging(System.Nullable<int> value);
    partial void OnTaskFolderIDChanged();
    partial void OnTaskIDChanging(System.Nullable<int> value);
    partial void OnTaskIDChanged();
    partial void OnProjectIDChanging(System.Nullable<int> value);
    partial void OnProjectIDChanged();
    partial void OnIndividualReceivers2Changing(string value);
    partial void OnIndividualReceivers2Changed();
    partial void OnIsDistChanging(System.Nullable<bool> value);
    partial void OnIsDistChanged();
    #endregion
		
		public WF_Incoming_Doc()
		{
			this._WF_Book = default(EntityRef<WF_Book>);
			OnCreated();
		}
		
		[Column(Storage="_DocumentID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DocumentID
		{
			get
			{
				return this._DocumentID;
			}
			set
			{
				if ((this._DocumentID != value))
				{
					this.OnDocumentIDChanging(value);
					this.SendPropertyChanging();
					this._DocumentID = value;
					this.SendPropertyChanged("DocumentID");
					this.OnDocumentIDChanged();
				}
			}
		}
		
		[Column(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_BookID", DbType="Int")]
		public System.Nullable<int> BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					if (this._WF_Book.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_DocumentNo", DbType="NVarChar(50)")]
		public string DocumentNo
		{
			get
			{
				return this._DocumentNo;
			}
			set
			{
				if ((this._DocumentNo != value))
				{
					this.OnDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._DocumentNo = value;
					this.SendPropertyChanged("DocumentNo");
					this.OnDocumentNoChanged();
				}
			}
		}
		
		[Column(Storage="_IssuedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> IssuedDate
		{
			get
			{
				return this._IssuedDate;
			}
			set
			{
				if ((this._IssuedDate != value))
				{
					this.OnIssuedDateChanging(value);
					this.SendPropertyChanging();
					this._IssuedDate = value;
					this.SendPropertyChanged("IssuedDate");
					this.OnIssuedDateChanged();
				}
			}
		}
		
		[Column(Storage="_SecurityLevel", DbType="Int")]
		public System.Nullable<int> SecurityLevel
		{
			get
			{
				return this._SecurityLevel;
			}
			set
			{
				if ((this._SecurityLevel != value))
				{
					this.OnSecurityLevelChanging(value);
					this.SendPropertyChanging();
					this._SecurityLevel = value;
					this.SendPropertyChanged("SecurityLevel");
					this.OnSecurityLevelChanged();
				}
			}
		}
		
		[Column(Storage="_Priority", DbType="Int")]
		public System.Nullable<int> Priority
		{
			get
			{
				return this._Priority;
			}
			set
			{
				if ((this._Priority != value))
				{
					this.OnPriorityChanging(value);
					this.SendPropertyChanging();
					this._Priority = value;
					this.SendPropertyChanged("Priority");
					this.OnPriorityChanged();
				}
			}
		}
		
		[Column(Storage="_IssuedOrganizationGroupID", DbType="Int")]
		public System.Nullable<int> IssuedOrganizationGroupID
		{
			get
			{
				return this._IssuedOrganizationGroupID;
			}
			set
			{
				if ((this._IssuedOrganizationGroupID != value))
				{
					this.OnIssuedOrganizationGroupIDChanging(value);
					this.SendPropertyChanging();
					this._IssuedOrganizationGroupID = value;
					this.SendPropertyChanged("IssuedOrganizationGroupID");
					this.OnIssuedOrganizationGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_IssuedOrganizationID", DbType="Int")]
		public System.Nullable<int> IssuedOrganizationID
		{
			get
			{
				return this._IssuedOrganizationID;
			}
			set
			{
				if ((this._IssuedOrganizationID != value))
				{
					this.OnIssuedOrganizationIDChanging(value);
					this.SendPropertyChanging();
					this._IssuedOrganizationID = value;
					this.SendPropertyChanged("IssuedOrganizationID");
					this.OnIssuedOrganizationIDChanged();
				}
			}
		}
		
		[Column(Storage="_SentOrganizationGroupID", DbType="Int")]
		public System.Nullable<int> SentOrganizationGroupID
		{
			get
			{
				return this._SentOrganizationGroupID;
			}
			set
			{
				if ((this._SentOrganizationGroupID != value))
				{
					this.OnSentOrganizationGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SentOrganizationGroupID = value;
					this.SendPropertyChanged("SentOrganizationGroupID");
					this.OnSentOrganizationGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_SentOrganizationID", DbType="Int")]
		public System.Nullable<int> SentOrganizationID
		{
			get
			{
				return this._SentOrganizationID;
			}
			set
			{
				if ((this._SentOrganizationID != value))
				{
					this.OnSentOrganizationIDChanging(value);
					this.SendPropertyChanging();
					this._SentOrganizationID = value;
					this.SendPropertyChanged("SentOrganizationID");
					this.OnSentOrganizationIDChanged();
				}
			}
		}
		
		[Column(Storage="_TypeID", DbType="Int")]
		public System.Nullable<int> TypeID
		{
			get
			{
				return this._TypeID;
			}
			set
			{
				if ((this._TypeID != value))
				{
					this.OnTypeIDChanging(value);
					this.SendPropertyChanging();
					this._TypeID = value;
					this.SendPropertyChanged("TypeID");
					this.OnTypeIDChanged();
				}
			}
		}
		
		[Column(Storage="_DocumentSummary", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string DocumentSummary
		{
			get
			{
				return this._DocumentSummary;
			}
			set
			{
				if ((this._DocumentSummary != value))
				{
					this.OnDocumentSummaryChanging(value);
					this.SendPropertyChanging();
					this._DocumentSummary = value;
					this.SendPropertyChanged("DocumentSummary");
					this.OnDocumentSummaryChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedUserID", DbType="Int")]
		public System.Nullable<int> UpdatedUserID
		{
			get
			{
				return this._UpdatedUserID;
			}
			set
			{
				if ((this._UpdatedUserID != value))
				{
					this.OnUpdatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._UpdatedUserID = value;
					this.SendPropertyChanged("UpdatedUserID");
					this.OnUpdatedUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedUserID", DbType="Int")]
		public System.Nullable<int> CreatedUserID
		{
			get
			{
				return this._CreatedUserID;
			}
			set
			{
				if ((this._CreatedUserID != value))
				{
					this.OnCreatedUserIDChanging(value);
					this.SendPropertyChanging();
					this._CreatedUserID = value;
					this.SendPropertyChanged("CreatedUserID");
					this.OnCreatedUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_Signer", DbType="NVarChar(50)")]
		public string Signer
		{
			get
			{
				return this._Signer;
			}
			set
			{
				if ((this._Signer != value))
				{
					this.OnSignerChanging(value);
					this.SendPropertyChanging();
					this._Signer = value;
					this.SendPropertyChanged("Signer");
					this.OnSignerChanged();
				}
			}
		}
		
		[Column(Storage="_SignerPosition", DbType="NVarChar(50)")]
		public string SignerPosition
		{
			get
			{
				return this._SignerPosition;
			}
			set
			{
				if ((this._SignerPosition != value))
				{
					this.OnSignerPositionChanging(value);
					this.SendPropertyChanging();
					this._SignerPosition = value;
					this.SendPropertyChanged("SignerPosition");
					this.OnSignerPositionChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReceivedDate
		{
			get
			{
				return this._ReceivedDate;
			}
			set
			{
				if ((this._ReceivedDate != value))
				{
					this.OnReceivedDateChanging(value);
					this.SendPropertyChanging();
					this._ReceivedDate = value;
					this.SendPropertyChanged("ReceivedDate");
					this.OnReceivedDateChanged();
				}
			}
		}
		
		[Column(Storage="_CompletedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> CompletedDate
		{
			get
			{
				return this._CompletedDate;
			}
			set
			{
				if ((this._CompletedDate != value))
				{
					this.OnCompletedDateChanging(value);
					this.SendPropertyChanging();
					this._CompletedDate = value;
					this.SendPropertyChanged("CompletedDate");
					this.OnCompletedDateChanged();
				}
			}
		}
		
		[Column(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[Column(Storage="_SignedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SignedDate
		{
			get
			{
				return this._SignedDate;
			}
			set
			{
				if ((this._SignedDate != value))
				{
					this.OnSignedDateChanging(value);
					this.SendPropertyChanging();
					this._SignedDate = value;
					this.SendPropertyChanged("SignedDate");
					this.OnSignedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ImportantLevel", DbType="Int")]
		public System.Nullable<int> ImportantLevel
		{
			get
			{
				return this._ImportantLevel;
			}
			set
			{
				if ((this._ImportantLevel != value))
				{
					this.OnImportantLevelChanging(value);
					this.SendPropertyChanging();
					this._ImportantLevel = value;
					this.SendPropertyChanged("ImportantLevel");
					this.OnImportantLevelChanged();
				}
			}
		}
		
		[Column(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[Column(Storage="_FieldID", DbType="Int")]
		public System.Nullable<int> FieldID
		{
			get
			{
				return this._FieldID;
			}
			set
			{
				if ((this._FieldID != value))
				{
					this.OnFieldIDChanging(value);
					this.SendPropertyChanging();
					this._FieldID = value;
					this.SendPropertyChanged("FieldID");
					this.OnFieldIDChanged();
				}
			}
		}
		
		[Column(Storage="_EffectiveDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate
		{
			get
			{
				return this._EffectiveDate;
			}
			set
			{
				if ((this._EffectiveDate != value))
				{
					this.OnEffectiveDateChanging(value);
					this.SendPropertyChanging();
					this._EffectiveDate = value;
					this.SendPropertyChanged("EffectiveDate");
					this.OnEffectiveDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsApproved", DbType="Bit")]
		public System.Nullable<bool> IsApproved
		{
			get
			{
				return this._IsApproved;
			}
			set
			{
				if ((this._IsApproved != value))
				{
					this.OnIsApprovedChanging(value);
					this.SendPropertyChanging();
					this._IsApproved = value;
					this.SendPropertyChanged("IsApproved");
					this.OnIsApprovedChanged();
				}
			}
		}
		
		[Column(Storage="_ResolveLevel", DbType="Int")]
		public System.Nullable<int> ResolveLevel
		{
			get
			{
				return this._ResolveLevel;
			}
			set
			{
				if ((this._ResolveLevel != value))
				{
					this.OnResolveLevelChanging(value);
					this.SendPropertyChanging();
					this._ResolveLevel = value;
					this.SendPropertyChanged("ResolveLevel");
					this.OnResolveLevelChanged();
				}
			}
		}
		
		[Column(Storage="_AssignedGroupId", DbType="Int")]
		public System.Nullable<int> AssignedGroupId
		{
			get
			{
				return this._AssignedGroupId;
			}
			set
			{
				if ((this._AssignedGroupId != value))
				{
					this.OnAssignedGroupIdChanging(value);
					this.SendPropertyChanging();
					this._AssignedGroupId = value;
					this.SendPropertyChanged("AssignedGroupId");
					this.OnAssignedGroupIdChanged();
				}
			}
		}
		
		[Column(Storage="_AssignedUserID", DbType="Int")]
		public System.Nullable<int> AssignedUserID
		{
			get
			{
				return this._AssignedUserID;
			}
			set
			{
				if ((this._AssignedUserID != value))
				{
					this.OnAssignedUserIDChanging(value);
					this.SendPropertyChanging();
					this._AssignedUserID = value;
					this.SendPropertyChanged("AssignedUserID");
					this.OnAssignedUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDate
		{
			get
			{
				return this._UpdatedDate;
			}
			set
			{
				if ((this._UpdatedDate != value))
				{
					this.OnUpdatedDateChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDate = value;
					this.SendPropertyChanged("UpdatedDate");
					this.OnUpdatedDateChanged();
				}
			}
		}
		
		[Column(Storage="_ExpiredDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ExpiredDate
		{
			get
			{
				return this._ExpiredDate;
			}
			set
			{
				if ((this._ExpiredDate != value))
				{
					this.OnExpiredDateChanging(value);
					this.SendPropertyChanging();
					this._ExpiredDate = value;
					this.SendPropertyChanged("ExpiredDate");
					this.OnExpiredDateChanged();
				}
			}
		}
		
		[Column(Storage="_Scale", DbType="Int")]
		public System.Nullable<int> Scale
		{
			get
			{
				return this._Scale;
			}
			set
			{
				if ((this._Scale != value))
				{
					this.OnScaleChanging(value);
					this.SendPropertyChanging();
					this._Scale = value;
					this.SendPropertyChanged("Scale");
					this.OnScaleChanged();
				}
			}
		}
		
		[Column(Storage="_Year", DbType="VarChar(50)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[Column(Storage="_Content", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Content
		{
			get
			{
				return this._Content;
			}
			set
			{
				if ((this._Content != value))
				{
					this.OnContentChanging(value);
					this.SendPropertyChanging();
					this._Content = value;
					this.SendPropertyChanged("Content");
					this.OnContentChanged();
				}
			}
		}
		
		[Column(Storage="_StoreID", DbType="Int")]
		public System.Nullable<int> StoreID
		{
			get
			{
				return this._StoreID;
			}
			set
			{
				if ((this._StoreID != value))
				{
					this.OnStoreIDChanging(value);
					this.SendPropertyChanging();
					this._StoreID = value;
					this.SendPropertyChanged("StoreID");
					this.OnStoreIDChanged();
				}
			}
		}
		
		[Column(Storage="_DocumentOrderNo", DbType="NVarChar(50)")]
		public string DocumentOrderNo
		{
			get
			{
				return this._DocumentOrderNo;
			}
			set
			{
				if ((this._DocumentOrderNo != value))
				{
					this.OnDocumentOrderNoChanging(value);
					this.SendPropertyChanging();
					this._DocumentOrderNo = value;
					this.SendPropertyChanged("DocumentOrderNo");
					this.OnDocumentOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovedUserID", DbType="Int")]
		public System.Nullable<int> ApprovedUserID
		{
			get
			{
				return this._ApprovedUserID;
			}
			set
			{
				if ((this._ApprovedUserID != value))
				{
					this.OnApprovedUserIDChanging(value);
					this.SendPropertyChanging();
					this._ApprovedUserID = value;
					this.SendPropertyChanged("ApprovedUserID");
					this.OnApprovedUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_NumOfCopies", DbType="NVarChar(50)")]
		public string NumOfCopies
		{
			get
			{
				return this._NumOfCopies;
			}
			set
			{
				if ((this._NumOfCopies != value))
				{
					this.OnNumOfCopiesChanging(value);
					this.SendPropertyChanging();
					this._NumOfCopies = value;
					this.SendPropertyChanged("NumOfCopies");
					this.OnNumOfCopiesChanged();
				}
			}
		}
		
		[Column(Storage="_NumOfArchives", DbType="NVarChar(50)")]
		public string NumOfArchives
		{
			get
			{
				return this._NumOfArchives;
			}
			set
			{
				if ((this._NumOfArchives != value))
				{
					this.OnNumOfArchivesChanging(value);
					this.SendPropertyChanging();
					this._NumOfArchives = value;
					this.SendPropertyChanged("NumOfArchives");
					this.OnNumOfArchivesChanged();
				}
			}
		}
		
		[Column(Storage="_ReplyDocumentNo", DbType="NVarChar(50)")]
		public string ReplyDocumentNo
		{
			get
			{
				return this._ReplyDocumentNo;
			}
			set
			{
				if ((this._ReplyDocumentNo != value))
				{
					this.OnReplyDocumentNoChanging(value);
					this.SendPropertyChanging();
					this._ReplyDocumentNo = value;
					this.SendPropertyChanged("ReplyDocumentNo");
					this.OnReplyDocumentNoChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivedGroupID", DbType="Int")]
		public System.Nullable<int> ReceivedGroupID
		{
			get
			{
				return this._ReceivedGroupID;
			}
			set
			{
				if ((this._ReceivedGroupID != value))
				{
					this.OnReceivedGroupIDChanging(value);
					this.SendPropertyChanging();
					this._ReceivedGroupID = value;
					this.SendPropertyChanged("ReceivedGroupID");
					this.OnReceivedGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReceivedUserID", DbType="Int")]
		public System.Nullable<int> ReceivedUserID
		{
			get
			{
				return this._ReceivedUserID;
			}
			set
			{
				if ((this._ReceivedUserID != value))
				{
					this.OnReceivedUserIDChanging(value);
					this.SendPropertyChanging();
					this._ReceivedUserID = value;
					this.SendPropertyChanged("ReceivedUserID");
					this.OnReceivedUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_GlobalDocumentOrderNo", DbType="Int")]
		public System.Nullable<int> GlobalDocumentOrderNo
		{
			get
			{
				return this._GlobalDocumentOrderNo;
			}
			set
			{
				if ((this._GlobalDocumentOrderNo != value))
				{
					this.OnGlobalDocumentOrderNoChanging(value);
					this.SendPropertyChanging();
					this._GlobalDocumentOrderNo = value;
					this.SendPropertyChanged("GlobalDocumentOrderNo");
					this.OnGlobalDocumentOrderNoChanged();
				}
			}
		}
		
		[Column(Storage="_IsCompleted", DbType="Bit")]
		public System.Nullable<bool> IsCompleted
		{
			get
			{
				return this._IsCompleted;
			}
			set
			{
				if ((this._IsCompleted != value))
				{
					this.OnIsCompletedChanging(value);
					this.SendPropertyChanging();
					this._IsCompleted = value;
					this.SendPropertyChanged("IsCompleted");
					this.OnIsCompletedChanged();
				}
			}
		}
		
		[Column(Storage="_UserGroupReceivers", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string UserGroupReceivers
		{
			get
			{
				return this._UserGroupReceivers;
			}
			set
			{
				if ((this._UserGroupReceivers != value))
				{
					this.OnUserGroupReceiversChanging(value);
					this.SendPropertyChanging();
					this._UserGroupReceivers = value;
					this.SendPropertyChanged("UserGroupReceivers");
					this.OnUserGroupReceiversChanged();
				}
			}
		}
		
		[Column(Storage="_IndividualReceivers", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string IndividualReceivers
		{
			get
			{
				return this._IndividualReceivers;
			}
			set
			{
				if ((this._IndividualReceivers != value))
				{
					this.OnIndividualReceiversChanging(value);
					this.SendPropertyChanging();
					this._IndividualReceivers = value;
					this.SendPropertyChanged("IndividualReceivers");
					this.OnIndividualReceiversChanged();
				}
			}
		}
		
		[Column(Storage="_LastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastUpdated
		{
			get
			{
				return this._LastUpdated;
			}
			set
			{
				if ((this._LastUpdated != value))
				{
					this.OnLastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._LastUpdated = value;
					this.SendPropertyChanged("LastUpdated");
					this.OnLastUpdatedChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string UpdatedContent
		{
			get
			{
				return this._UpdatedContent;
			}
			set
			{
				if ((this._UpdatedContent != value))
				{
					this.OnUpdatedContentChanging(value);
					this.SendPropertyChanging();
					this._UpdatedContent = value;
					this.SendPropertyChanged("UpdatedContent");
					this.OnUpdatedContentChanged();
				}
			}
		}
		
		[Column(Storage="_ApprovedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ApprovedDate
		{
			get
			{
				return this._ApprovedDate;
			}
			set
			{
				if ((this._ApprovedDate != value))
				{
					this.OnApprovedDateChanging(value);
					this.SendPropertyChanging();
					this._ApprovedDate = value;
					this.SendPropertyChanged("ApprovedDate");
					this.OnApprovedDateChanged();
				}
			}
		}
		
		[Column(Storage="_PopupSentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PopupSentDate
		{
			get
			{
				return this._PopupSentDate;
			}
			set
			{
				if ((this._PopupSentDate != value))
				{
					this.OnPopupSentDateChanging(value);
					this.SendPropertyChanging();
					this._PopupSentDate = value;
					this.SendPropertyChanged("PopupSentDate");
					this.OnPopupSentDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsPopupSent", DbType="Bit")]
		public System.Nullable<bool> IsPopupSent
		{
			get
			{
				return this._IsPopupSent;
			}
			set
			{
				if ((this._IsPopupSent != value))
				{
					this.OnIsPopupSentChanging(value);
					this.SendPropertyChanging();
					this._IsPopupSent = value;
					this.SendPropertyChanged("IsPopupSent");
					this.OnIsPopupSentChanged();
				}
			}
		}
		
		[Column(Storage="_PopupIndividualReceivers", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string PopupIndividualReceivers
		{
			get
			{
				return this._PopupIndividualReceivers;
			}
			set
			{
				if ((this._PopupIndividualReceivers != value))
				{
					this.OnPopupIndividualReceiversChanging(value);
					this.SendPropertyChanging();
					this._PopupIndividualReceivers = value;
					this.SendPropertyChanged("PopupIndividualReceivers");
					this.OnPopupIndividualReceiversChanged();
				}
			}
		}
		
		[Column(Storage="_PopupSentUserID", DbType="Int")]
		public System.Nullable<int> PopupSentUserID
		{
			get
			{
				return this._PopupSentUserID;
			}
			set
			{
				if ((this._PopupSentUserID != value))
				{
					this.OnPopupSentUserIDChanging(value);
					this.SendPropertyChanging();
					this._PopupSentUserID = value;
					this.SendPropertyChanged("PopupSentUserID");
					this.OnPopupSentUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_SMSSentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SMSSentDate
		{
			get
			{
				return this._SMSSentDate;
			}
			set
			{
				if ((this._SMSSentDate != value))
				{
					this.OnSMSSentDateChanging(value);
					this.SendPropertyChanging();
					this._SMSSentDate = value;
					this.SendPropertyChanged("SMSSentDate");
					this.OnSMSSentDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsSMSSent", DbType="Bit")]
		public System.Nullable<bool> IsSMSSent
		{
			get
			{
				return this._IsSMSSent;
			}
			set
			{
				if ((this._IsSMSSent != value))
				{
					this.OnIsSMSSentChanging(value);
					this.SendPropertyChanging();
					this._IsSMSSent = value;
					this.SendPropertyChanged("IsSMSSent");
					this.OnIsSMSSentChanged();
				}
			}
		}
		
		[Column(Storage="_SMSIndividualReceivers", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string SMSIndividualReceivers
		{
			get
			{
				return this._SMSIndividualReceivers;
			}
			set
			{
				if ((this._SMSIndividualReceivers != value))
				{
					this.OnSMSIndividualReceiversChanging(value);
					this.SendPropertyChanging();
					this._SMSIndividualReceivers = value;
					this.SendPropertyChanged("SMSIndividualReceivers");
					this.OnSMSIndividualReceiversChanged();
				}
			}
		}
		
		[Column(Storage="_SMSSentUserID", DbType="Int")]
		public System.Nullable<int> SMSSentUserID
		{
			get
			{
				return this._SMSSentUserID;
			}
			set
			{
				if ((this._SMSSentUserID != value))
				{
					this.OnSMSSentUserIDChanging(value);
					this.SendPropertyChanging();
					this._SMSSentUserID = value;
					this.SendPropertyChanged("SMSSentUserID");
					this.OnSMSSentUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_IsReviewed", DbType="Bit")]
		public System.Nullable<bool> IsReviewed
		{
			get
			{
				return this._IsReviewed;
			}
			set
			{
				if ((this._IsReviewed != value))
				{
					this.OnIsReviewedChanging(value);
					this.SendPropertyChanging();
					this._IsReviewed = value;
					this.SendPropertyChanged("IsReviewed");
					this.OnIsReviewedChanged();
				}
			}
		}
		
		[Column(Storage="_ReviewedUserID", DbType="Int")]
		public System.Nullable<int> ReviewedUserID
		{
			get
			{
				return this._ReviewedUserID;
			}
			set
			{
				if ((this._ReviewedUserID != value))
				{
					this.OnReviewedUserIDChanging(value);
					this.SendPropertyChanging();
					this._ReviewedUserID = value;
					this.SendPropertyChanged("ReviewedUserID");
					this.OnReviewedUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReviewContent", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ReviewContent
		{
			get
			{
				return this._ReviewContent;
			}
			set
			{
				if ((this._ReviewContent != value))
				{
					this.OnReviewContentChanging(value);
					this.SendPropertyChanging();
					this._ReviewContent = value;
					this.SendPropertyChanged("ReviewContent");
					this.OnReviewContentChanged();
				}
			}
		}
		
		[Column(Storage="_ReviewedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> ReviewedDate
		{
			get
			{
				return this._ReviewedDate;
			}
			set
			{
				if ((this._ReviewedDate != value))
				{
					this.OnReviewedDateChanging(value);
					this.SendPropertyChanging();
					this._ReviewedDate = value;
					this.SendPropertyChanged("ReviewedDate");
					this.OnReviewedDateChanged();
				}
			}
		}
		
		[Column(Storage="_StartedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartedDate
		{
			get
			{
				return this._StartedDate;
			}
			set
			{
				if ((this._StartedDate != value))
				{
					this.OnStartedDateChanging(value);
					this.SendPropertyChanging();
					this._StartedDate = value;
					this.SendPropertyChanged("StartedDate");
					this.OnStartedDateChanged();
				}
			}
		}
		
		[Column(Storage="_Note2", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Note2
		{
			get
			{
				return this._Note2;
			}
			set
			{
				if ((this._Note2 != value))
				{
					this.OnNote2Changing(value);
					this.SendPropertyChanging();
					this._Note2 = value;
					this.SendPropertyChanged("Note2");
					this.OnNote2Changed();
				}
			}
		}
		
		[Column(Storage="_AssignedReviewedUserID", DbType="Int")]
		public System.Nullable<int> AssignedReviewedUserID
		{
			get
			{
				return this._AssignedReviewedUserID;
			}
			set
			{
				if ((this._AssignedReviewedUserID != value))
				{
					this.OnAssignedReviewedUserIDChanging(value);
					this.SendPropertyChanging();
					this._AssignedReviewedUserID = value;
					this.SendPropertyChanged("AssignedReviewedUserID");
					this.OnAssignedReviewedUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_DocumentOrderNo2", DbType="Int")]
		public System.Nullable<int> DocumentOrderNo2
		{
			get
			{
				return this._DocumentOrderNo2;
			}
			set
			{
				if ((this._DocumentOrderNo2 != value))
				{
					this.OnDocumentOrderNo2Changing(value);
					this.SendPropertyChanging();
					this._DocumentOrderNo2 = value;
					this.SendPropertyChanged("DocumentOrderNo2");
					this.OnDocumentOrderNo2Changed();
				}
			}
		}
		
		[Column(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[Column(Storage="_IssuedOrganizationName2", DbType="NVarChar(200)")]
		public string IssuedOrganizationName2
		{
			get
			{
				return this._IssuedOrganizationName2;
			}
			set
			{
				if ((this._IssuedOrganizationName2 != value))
				{
					this.OnIssuedOrganizationName2Changing(value);
					this.SendPropertyChanging();
					this._IssuedOrganizationName2 = value;
					this.SendPropertyChanged("IssuedOrganizationName2");
					this.OnIssuedOrganizationName2Changed();
				}
			}
		}
		
		[Column(Storage="_SentOrganizationName2", DbType="NVarChar(200)")]
		public string SentOrganizationName2
		{
			get
			{
				return this._SentOrganizationName2;
			}
			set
			{
				if ((this._SentOrganizationName2 != value))
				{
					this.OnSentOrganizationName2Changing(value);
					this.SendPropertyChanging();
					this._SentOrganizationName2 = value;
					this.SendPropertyChanged("SentOrganizationName2");
					this.OnSentOrganizationName2Changed();
				}
			}
		}
		
		[Column(Storage="_StoreName2", DbType="NVarChar(200)")]
		public string StoreName2
		{
			get
			{
				return this._StoreName2;
			}
			set
			{
				if ((this._StoreName2 != value))
				{
					this.OnStoreName2Changing(value);
					this.SendPropertyChanging();
					this._StoreName2 = value;
					this.SendPropertyChanged("StoreName2");
					this.OnStoreName2Changed();
				}
			}
		}
		
		[Column(Storage="_SupervisedUserID", DbType="Int")]
		public System.Nullable<int> SupervisedUserID
		{
			get
			{
				return this._SupervisedUserID;
			}
			set
			{
				if ((this._SupervisedUserID != value))
				{
					this.OnSupervisedUserIDChanging(value);
					this.SendPropertyChanging();
					this._SupervisedUserID = value;
					this.SendPropertyChanged("SupervisedUserID");
					this.OnSupervisedUserIDChanged();
				}
			}
		}
		
		[Column(Storage="_PortalReceivers", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string PortalReceivers
		{
			get
			{
				return this._PortalReceivers;
			}
			set
			{
				if ((this._PortalReceivers != value))
				{
					this.OnPortalReceiversChanging(value);
					this.SendPropertyChanging();
					this._PortalReceivers = value;
					this.SendPropertyChanged("PortalReceivers");
					this.OnPortalReceiversChanged();
				}
			}
		}
		
		[Column(Storage="_OfficeManagerID", DbType="Int")]
		public System.Nullable<int> OfficeManagerID
		{
			get
			{
				return this._OfficeManagerID;
			}
			set
			{
				if ((this._OfficeManagerID != value))
				{
					this.OnOfficeManagerIDChanging(value);
					this.SendPropertyChanging();
					this._OfficeManagerID = value;
					this.SendPropertyChanged("OfficeManagerID");
					this.OnOfficeManagerIDChanged();
				}
			}
		}
		
		[Column(Storage="_FlowType", DbType="Int")]
		public System.Nullable<int> FlowType
		{
			get
			{
				return this._FlowType;
			}
			set
			{
				if ((this._FlowType != value))
				{
					this.OnFlowTypeChanging(value);
					this.SendPropertyChanging();
					this._FlowType = value;
					this.SendPropertyChanged("FlowType");
					this.OnFlowTypeChanged();
				}
			}
		}
		
		[Column(Storage="_OrgManagerSentNote", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string OrgManagerSentNote
		{
			get
			{
				return this._OrgManagerSentNote;
			}
			set
			{
				if ((this._OrgManagerSentNote != value))
				{
					this.OnOrgManagerSentNoteChanging(value);
					this.SendPropertyChanging();
					this._OrgManagerSentNote = value;
					this.SendPropertyChanged("OrgManagerSentNote");
					this.OnOrgManagerSentNoteChanged();
				}
			}
		}
		
		[Column(Storage="_OrgManagerSentDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> OrgManagerSentDate
		{
			get
			{
				return this._OrgManagerSentDate;
			}
			set
			{
				if ((this._OrgManagerSentDate != value))
				{
					this.OnOrgManagerSentDateChanging(value);
					this.SendPropertyChanging();
					this._OrgManagerSentDate = value;
					this.SendPropertyChanged("OrgManagerSentDate");
					this.OnOrgManagerSentDateChanged();
				}
			}
		}
		
		[Column(Storage="_IsOrgManagerSent", DbType="Bit")]
		public System.Nullable<bool> IsOrgManagerSent
		{
			get
			{
				return this._IsOrgManagerSent;
			}
			set
			{
				if ((this._IsOrgManagerSent != value))
				{
					this.OnIsOrgManagerSentChanging(value);
					this.SendPropertyChanging();
					this._IsOrgManagerSent = value;
					this.SendPropertyChanged("IsOrgManagerSent");
					this.OnIsOrgManagerSentChanged();
				}
			}
		}
		
		[Column(Storage="_EffectiveDate2", DbType="DateTime")]
		public System.Nullable<System.DateTime> EffectiveDate2
		{
			get
			{
				return this._EffectiveDate2;
			}
			set
			{
				if ((this._EffectiveDate2 != value))
				{
					this.OnEffectiveDate2Changing(value);
					this.SendPropertyChanging();
					this._EffectiveDate2 = value;
					this.SendPropertyChanged("EffectiveDate2");
					this.OnEffectiveDate2Changed();
				}
			}
		}
		
		[Column(Storage="_TaskRelatedTerms", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string TaskRelatedTerms
		{
			get
			{
				return this._TaskRelatedTerms;
			}
			set
			{
				if ((this._TaskRelatedTerms != value))
				{
					this.OnTaskRelatedTermsChanging(value);
					this.SendPropertyChanging();
					this._TaskRelatedTerms = value;
					this.SendPropertyChanged("TaskRelatedTerms");
					this.OnTaskRelatedTermsChanged();
				}
			}
		}
		
		[Column(Storage="_ReviewNote", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string ReviewNote
		{
			get
			{
				return this._ReviewNote;
			}
			set
			{
				if ((this._ReviewNote != value))
				{
					this.OnReviewNoteChanging(value);
					this.SendPropertyChanging();
					this._ReviewNote = value;
					this.SendPropertyChanged("ReviewNote");
					this.OnReviewNoteChanged();
				}
			}
		}
		
		[Column(Storage="_TaskFolderID", DbType="Int")]
		public System.Nullable<int> TaskFolderID
		{
			get
			{
				return this._TaskFolderID;
			}
			set
			{
				if ((this._TaskFolderID != value))
				{
					this.OnTaskFolderIDChanging(value);
					this.SendPropertyChanging();
					this._TaskFolderID = value;
					this.SendPropertyChanged("TaskFolderID");
					this.OnTaskFolderIDChanged();
				}
			}
		}
		
		[Column(Storage="_TaskID", DbType="Int")]
		public System.Nullable<int> TaskID
		{
			get
			{
				return this._TaskID;
			}
			set
			{
				if ((this._TaskID != value))
				{
					this.OnTaskIDChanging(value);
					this.SendPropertyChanging();
					this._TaskID = value;
					this.SendPropertyChanged("TaskID");
					this.OnTaskIDChanged();
				}
			}
		}
		
		[Column(Storage="_ProjectID", DbType="Int")]
		public System.Nullable<int> ProjectID
		{
			get
			{
				return this._ProjectID;
			}
			set
			{
				if ((this._ProjectID != value))
				{
					this.OnProjectIDChanging(value);
					this.SendPropertyChanging();
					this._ProjectID = value;
					this.SendPropertyChanged("ProjectID");
					this.OnProjectIDChanged();
				}
			}
		}
		
		[Column(Storage="_IndividualReceivers2", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string IndividualReceivers2
		{
			get
			{
				return this._IndividualReceivers2;
			}
			set
			{
				if ((this._IndividualReceivers2 != value))
				{
					this.OnIndividualReceivers2Changing(value);
					this.SendPropertyChanging();
					this._IndividualReceivers2 = value;
					this.SendPropertyChanged("IndividualReceivers2");
					this.OnIndividualReceivers2Changed();
				}
			}
		}
		
		[Column(Storage="_IsDist", DbType="Bit")]
		public System.Nullable<bool> IsDist
		{
			get
			{
				return this._IsDist;
			}
			set
			{
				if ((this._IsDist != value))
				{
					this.OnIsDistChanging(value);
					this.SendPropertyChanging();
					this._IsDist = value;
					this.SendPropertyChanged("IsDist");
					this.OnIsDistChanged();
				}
			}
		}
		
		[Association(Name="WF_Book_WF_Incoming_Doc", Storage="_WF_Book", ThisKey="BookID", OtherKey="BookID", IsForeignKey=true)]
		public WF_Book WF_Book
		{
			get
			{
				return this._WF_Book.Entity;
			}
			set
			{
				WF_Book previousValue = this._WF_Book.Entity;
				if (((previousValue != value) 
							|| (this._WF_Book.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._WF_Book.Entity = null;
						previousValue.WF_Incoming_Docs.Remove(this);
					}
					this._WF_Book.Entity = value;
					if ((value != null))
					{
						value.WF_Incoming_Docs.Add(this);
						this._BookID = value.BookID;
					}
					else
					{
						this._BookID = default(Nullable<int>);
					}
					this.SendPropertyChanged("WF_Book");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.WF_Books")]
	public partial class WF_Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _BookID;
		
		private string _Name;
		
		private string _Notation;
		
		private System.Nullable<int> _GroupID;
		
		private string _Note;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<System.DateTime> _StartedDate;
		
		private System.Nullable<System.DateTime> _FinishedDate;
		
		private System.Nullable<int> _PortalID;
		
		private EntitySet<WF_Incoming_Doc> _WF_Incoming_Docs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnBookIDChanging(int value);
    partial void OnBookIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnNotationChanging(string value);
    partial void OnNotationChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnStartedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartedDateChanged();
    partial void OnFinishedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFinishedDateChanged();
    partial void OnPortalIDChanging(System.Nullable<int> value);
    partial void OnPortalIDChanged();
    #endregion
		
		public WF_Book()
		{
			this._WF_Incoming_Docs = new EntitySet<WF_Incoming_Doc>(new Action<WF_Incoming_Doc>(this.attach_WF_Incoming_Docs), new Action<WF_Incoming_Doc>(this.detach_WF_Incoming_Docs));
			OnCreated();
		}
		
		[Column(Storage="_BookID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int BookID
		{
			get
			{
				return this._BookID;
			}
			set
			{
				if ((this._BookID != value))
				{
					this.OnBookIDChanging(value);
					this.SendPropertyChanging();
					this._BookID = value;
					this.SendPropertyChanged("BookID");
					this.OnBookIDChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(200)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Notation", DbType="NVarChar(50)")]
		public string Notation
		{
			get
			{
				return this._Notation;
			}
			set
			{
				if ((this._Notation != value))
				{
					this.OnNotationChanging(value);
					this.SendPropertyChanging();
					this._Notation = value;
					this.SendPropertyChanged("Notation");
					this.OnNotationChanged();
				}
			}
		}
		
		[Column(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[Column(Storage="_Note", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[Column(Storage="_StartedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> StartedDate
		{
			get
			{
				return this._StartedDate;
			}
			set
			{
				if ((this._StartedDate != value))
				{
					this.OnStartedDateChanging(value);
					this.SendPropertyChanging();
					this._StartedDate = value;
					this.SendPropertyChanged("StartedDate");
					this.OnStartedDateChanged();
				}
			}
		}
		
		[Column(Storage="_FinishedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FinishedDate
		{
			get
			{
				return this._FinishedDate;
			}
			set
			{
				if ((this._FinishedDate != value))
				{
					this.OnFinishedDateChanging(value);
					this.SendPropertyChanging();
					this._FinishedDate = value;
					this.SendPropertyChanged("FinishedDate");
					this.OnFinishedDateChanged();
				}
			}
		}
		
		[Column(Storage="_PortalID", DbType="Int")]
		public System.Nullable<int> PortalID
		{
			get
			{
				return this._PortalID;
			}
			set
			{
				if ((this._PortalID != value))
				{
					this.OnPortalIDChanging(value);
					this.SendPropertyChanging();
					this._PortalID = value;
					this.SendPropertyChanged("PortalID");
					this.OnPortalIDChanged();
				}
			}
		}
		
		[Association(Name="WF_Book_WF_Incoming_Doc", Storage="_WF_Incoming_Docs", ThisKey="BookID", OtherKey="BookID")]
		public EntitySet<WF_Incoming_Doc> WF_Incoming_Docs
		{
			get
			{
				return this._WF_Incoming_Docs;
			}
			set
			{
				this._WF_Incoming_Docs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_WF_Incoming_Docs(WF_Incoming_Doc entity)
		{
			this.SendPropertyChanging();
			entity.WF_Book = this;
		}
		
		private void detach_WF_Incoming_Docs(WF_Incoming_Doc entity)
		{
			this.SendPropertyChanging();
			entity.WF_Book = null;
		}
	}
}
#pragma warning restore 1591
