#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1008
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KTKS_DonKH.LinQ
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="CAPNUOCTANHOA")]
	public partial class DB_CAPNUOCTANHOADataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPHUONG(PHUONG instance);
    partial void UpdatePHUONG(PHUONG instance);
    partial void DeletePHUONG(PHUONG instance);
    partial void InsertQUAN(QUAN instance);
    partial void UpdateQUAN(QUAN instance);
    partial void DeleteQUAN(QUAN instance);
    #endregion
		
		public DB_CAPNUOCTANHOADataContext() : 
				base(global::KTKS_DonKH.Properties.Settings.Default.CAPNUOCTANHOAConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DB_CAPNUOCTANHOADataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_CAPNUOCTANHOADataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_CAPNUOCTANHOADataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DB_CAPNUOCTANHOADataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<PHUONG> PHUONGs
		{
			get
			{
				return this.GetTable<PHUONG>();
			}
		}
		
		public System.Data.Linq.Table<QUAN> QUANs
		{
			get
			{
				return this.GetTable<QUAN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHUONG")]
	public partial class PHUONG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAQUAN;
		
		private string _MAPHUONG;
		
		private string _TENPHUONG;
		
		private EntityRef<QUAN> _QUAN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAQUANChanging(int value);
    partial void OnMAQUANChanged();
    partial void OnMAPHUONGChanging(string value);
    partial void OnMAPHUONGChanged();
    partial void OnTENPHUONGChanging(string value);
    partial void OnTENPHUONGChanged();
    #endregion
		
		public PHUONG()
		{
			this._QUAN = default(EntityRef<QUAN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQUAN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAQUAN
		{
			get
			{
				return this._MAQUAN;
			}
			set
			{
				if ((this._MAQUAN != value))
				{
					if (this._QUAN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAQUANChanging(value);
					this.SendPropertyChanging();
					this._MAQUAN = value;
					this.SendPropertyChanged("MAQUAN");
					this.OnMAQUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPHUONG", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPHUONG
		{
			get
			{
				return this._MAPHUONG;
			}
			set
			{
				if ((this._MAPHUONG != value))
				{
					this.OnMAPHUONGChanging(value);
					this.SendPropertyChanging();
					this._MAPHUONG = value;
					this.SendPropertyChanged("MAPHUONG");
					this.OnMAPHUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENPHUONG", DbType="NVarChar(50)")]
		public string TENPHUONG
		{
			get
			{
				return this._TENPHUONG;
			}
			set
			{
				if ((this._TENPHUONG != value))
				{
					this.OnTENPHUONGChanging(value);
					this.SendPropertyChanging();
					this._TENPHUONG = value;
					this.SendPropertyChanged("TENPHUONG");
					this.OnTENPHUONGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUAN_PHUONG", Storage="_QUAN", ThisKey="MAQUAN", OtherKey="MAQUAN", IsForeignKey=true)]
		public QUAN QUAN
		{
			get
			{
				return this._QUAN.Entity;
			}
			set
			{
				QUAN previousValue = this._QUAN.Entity;
				if (((previousValue != value) 
							|| (this._QUAN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUAN.Entity = null;
						previousValue.PHUONGs.Remove(this);
					}
					this._QUAN.Entity = value;
					if ((value != null))
					{
						value.PHUONGs.Add(this);
						this._MAQUAN = value.MAQUAN;
					}
					else
					{
						this._MAQUAN = default(int);
					}
					this.SendPropertyChanged("QUAN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUAN")]
	public partial class QUAN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MAQUAN;
		
		private string _TENQUAN;
		
		private EntitySet<PHUONG> _PHUONGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAQUANChanging(int value);
    partial void OnMAQUANChanged();
    partial void OnTENQUANChanging(string value);
    partial void OnTENQUANChanged();
    #endregion
		
		public QUAN()
		{
			this._PHUONGs = new EntitySet<PHUONG>(new Action<PHUONG>(this.attach_PHUONGs), new Action<PHUONG>(this.detach_PHUONGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAQUAN", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MAQUAN
		{
			get
			{
				return this._MAQUAN;
			}
			set
			{
				if ((this._MAQUAN != value))
				{
					this.OnMAQUANChanging(value);
					this.SendPropertyChanging();
					this._MAQUAN = value;
					this.SendPropertyChanged("MAQUAN");
					this.OnMAQUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENQUAN", DbType="NVarChar(50)")]
		public string TENQUAN
		{
			get
			{
				return this._TENQUAN;
			}
			set
			{
				if ((this._TENQUAN != value))
				{
					this.OnTENQUANChanging(value);
					this.SendPropertyChanging();
					this._TENQUAN = value;
					this.SendPropertyChanged("TENQUAN");
					this.OnTENQUANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUAN_PHUONG", Storage="_PHUONGs", ThisKey="MAQUAN", OtherKey="MAQUAN")]
		public EntitySet<PHUONG> PHUONGs
		{
			get
			{
				return this._PHUONGs;
			}
			set
			{
				this._PHUONGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHUONGs(PHUONG entity)
		{
			this.SendPropertyChanging();
			entity.QUAN = this;
		}
		
		private void detach_PHUONGs(PHUONG entity)
		{
			this.SendPropertyChanging();
			entity.QUAN = null;
		}
	}
}
#pragma warning restore 1591
