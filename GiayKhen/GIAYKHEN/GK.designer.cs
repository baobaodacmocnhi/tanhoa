#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GIAYKHEN
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DH_CODONG")]
	public partial class GKDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertA_GIAYKHEN(A_GIAYKHEN instance);
    partial void UpdateA_GIAYKHEN(A_GIAYKHEN instance);
    partial void DeleteA_GIAYKHEN(A_GIAYKHEN instance);
    partial void InsertQuaySo(QuaySo instance);
    partial void UpdateQuaySo(QuaySo instance);
    partial void DeleteQuaySo(QuaySo instance);
    #endregion
		
		public GKDataContext() : 
				base(global::GIAYKHEN.Properties.Settings.Default.DH_CODONGConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public GKDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GKDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GKDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public GKDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<A_GIAYKHEN> A_GIAYKHENs
		{
			get
			{
				return this.GetTable<A_GIAYKHEN>();
			}
		}
		
		public System.Data.Linq.Table<QuaySo> QuaySos
		{
			get
			{
				return this.GetTable<QuaySo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.A_GIAYKHEN")]
	public partial class A_GIAYKHEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<bool> _GioiTinh;
		
		private bool _Name;
		
		private System.Nullable<int> _SoVaoSo;
		
		private string _HOTEN;
		
		private string _HOTENB;
		
		private string _CHUCVU;
		
		private string _PHONGBAN;
		
		private bool _TAPTHE;
		
		private bool _CongDoan;
		
		private bool _DoanThanhNien;
		
		private bool _DangBo;
		
		private bool _Guong;
		
		private bool _HCM;
		
		private bool _DanVanKheo;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnNameChanging(bool value);
    partial void OnNameChanged();
    partial void OnSoVaoSoChanging(System.Nullable<int> value);
    partial void OnSoVaoSoChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnHOTENBChanging(string value);
    partial void OnHOTENBChanged();
    partial void OnCHUCVUChanging(string value);
    partial void OnCHUCVUChanged();
    partial void OnPHONGBANChanging(string value);
    partial void OnPHONGBANChanged();
    partial void OnTAPTHEChanging(bool value);
    partial void OnTAPTHEChanged();
    partial void OnCongDoanChanging(bool value);
    partial void OnCongDoanChanged();
    partial void OnDoanThanhNienChanging(bool value);
    partial void OnDoanThanhNienChanged();
    partial void OnDangBoChanging(bool value);
    partial void OnDangBoChanged();
    partial void OnGuongChanging(bool value);
    partial void OnGuongChanged();
    partial void OnHCMChanging(bool value);
    partial void OnHCMChanged();
    partial void OnDanVanKheoChanging(bool value);
    partial void OnDanVanKheoChanged();
    #endregion
		
		public A_GIAYKHEN()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
		public System.Nullable<bool> GioiTinh
		{
			get
			{
				return this._GioiTinh;
			}
			set
			{
				if ((this._GioiTinh != value))
				{
					this.OnGioiTinhChanging(value);
					this.SendPropertyChanging();
					this._GioiTinh = value;
					this.SendPropertyChanged("GioiTinh");
					this.OnGioiTinhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="Bit NOT NULL")]
		public bool Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoVaoSo", DbType="Int")]
		public System.Nullable<int> SoVaoSo
		{
			get
			{
				return this._SoVaoSo;
			}
			set
			{
				if ((this._SoVaoSo != value))
				{
					this.OnSoVaoSoChanging(value);
					this.SendPropertyChanging();
					this._SoVaoSo = value;
					this.SendPropertyChanged("SoVaoSo");
					this.OnSoVaoSoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(MAX)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTENB", DbType="NVarChar(200)")]
		public string HOTENB
		{
			get
			{
				return this._HOTENB;
			}
			set
			{
				if ((this._HOTENB != value))
				{
					this.OnHOTENBChanging(value);
					this.SendPropertyChanging();
					this._HOTENB = value;
					this.SendPropertyChanged("HOTENB");
					this.OnHOTENBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHUCVU", DbType="NVarChar(MAX)")]
		public string CHUCVU
		{
			get
			{
				return this._CHUCVU;
			}
			set
			{
				if ((this._CHUCVU != value))
				{
					this.OnCHUCVUChanging(value);
					this.SendPropertyChanging();
					this._CHUCVU = value;
					this.SendPropertyChanged("CHUCVU");
					this.OnCHUCVUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PHONGBAN", DbType="NVarChar(MAX)")]
		public string PHONGBAN
		{
			get
			{
				return this._PHONGBAN;
			}
			set
			{
				if ((this._PHONGBAN != value))
				{
					this.OnPHONGBANChanging(value);
					this.SendPropertyChanging();
					this._PHONGBAN = value;
					this.SendPropertyChanged("PHONGBAN");
					this.OnPHONGBANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TAPTHE", DbType="Bit NOT NULL")]
		public bool TAPTHE
		{
			get
			{
				return this._TAPTHE;
			}
			set
			{
				if ((this._TAPTHE != value))
				{
					this.OnTAPTHEChanging(value);
					this.SendPropertyChanging();
					this._TAPTHE = value;
					this.SendPropertyChanged("TAPTHE");
					this.OnTAPTHEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CongDoan", DbType="Bit NOT NULL")]
		public bool CongDoan
		{
			get
			{
				return this._CongDoan;
			}
			set
			{
				if ((this._CongDoan != value))
				{
					this.OnCongDoanChanging(value);
					this.SendPropertyChanging();
					this._CongDoan = value;
					this.SendPropertyChanged("CongDoan");
					this.OnCongDoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoanThanhNien", DbType="Bit NOT NULL")]
		public bool DoanThanhNien
		{
			get
			{
				return this._DoanThanhNien;
			}
			set
			{
				if ((this._DoanThanhNien != value))
				{
					this.OnDoanThanhNienChanging(value);
					this.SendPropertyChanging();
					this._DoanThanhNien = value;
					this.SendPropertyChanged("DoanThanhNien");
					this.OnDoanThanhNienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DangBo", DbType="Bit NOT NULL")]
		public bool DangBo
		{
			get
			{
				return this._DangBo;
			}
			set
			{
				if ((this._DangBo != value))
				{
					this.OnDangBoChanging(value);
					this.SendPropertyChanging();
					this._DangBo = value;
					this.SendPropertyChanged("DangBo");
					this.OnDangBoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Guong", DbType="Bit NOT NULL")]
		public bool Guong
		{
			get
			{
				return this._Guong;
			}
			set
			{
				if ((this._Guong != value))
				{
					this.OnGuongChanging(value);
					this.SendPropertyChanging();
					this._Guong = value;
					this.SendPropertyChanged("Guong");
					this.OnGuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HCM", DbType="Bit NOT NULL")]
		public bool HCM
		{
			get
			{
				return this._HCM;
			}
			set
			{
				if ((this._HCM != value))
				{
					this.OnHCMChanging(value);
					this.SendPropertyChanging();
					this._HCM = value;
					this.SendPropertyChanged("HCM");
					this.OnHCMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DanVanKheo", DbType="Bit NOT NULL")]
		public bool DanVanKheo
		{
			get
			{
				return this._DanVanKheo;
			}
			set
			{
				if ((this._DanVanKheo != value))
				{
					this.OnDanVanKheoChanging(value);
					this.SendPropertyChanging();
					this._DanVanKheo = value;
					this.SendPropertyChanged("DanVanKheo");
					this.OnDanVanKheoChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuaySo")]
	public partial class QuaySo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _STT;
		
		private string _DonVi;
		
		private string _HoTen;
		
		private bool _Quay;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSTTChanging(int value);
    partial void OnSTTChanged();
    partial void OnDonViChanging(string value);
    partial void OnDonViChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnQuayChanging(bool value);
    partial void OnQuayChanged();
    #endregion
		
		public QuaySo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STT", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int STT
		{
			get
			{
				return this._STT;
			}
			set
			{
				if ((this._STT != value))
				{
					this.OnSTTChanging(value);
					this.SendPropertyChanging();
					this._STT = value;
					this.SendPropertyChanged("STT");
					this.OnSTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DonVi", DbType="NVarChar(200)")]
		public string DonVi
		{
			get
			{
				return this._DonVi;
			}
			set
			{
				if ((this._DonVi != value))
				{
					this.OnDonViChanging(value);
					this.SendPropertyChanging();
					this._DonVi = value;
					this.SendPropertyChanged("DonVi");
					this.OnDonViChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(100)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quay", DbType="Bit NOT NULL")]
		public bool Quay
		{
			get
			{
				return this._Quay;
			}
			set
			{
				if ((this._Quay != value))
				{
					this.OnQuayChanging(value);
					this.SendPropertyChanging();
					this._Quay = value;
					this.SendPropertyChanged("Quay");
					this.OnQuayChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
