@model DangBoWeb.Models.CongVanDen

@{
    ViewBag.Title = "Edit";
}
@section Scripts {

    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjqryUi")

    <script type="text/javascript">

        $(document).ready(function () {
            //combobox
            $('#navbarDropdownDonVi a').on('click', function () {
                $('#IDDonVi').val($(this).attr('name'));
                $('#TenDonVi').text($(this).text());
            });
            //combobox
            $('#navbarDropdownLoaiCV a').on('click', function () {
                $('#IDLoaiCV').val($(this).attr('name'));
                $('#LoaiCV').text($(this).text());
            });
            //checkbox
            $("input[name*='HetHan']").on('click', function () {
                if ($("input[name*='HetHan']").prop('checked') == true)
                    $('#NgayHetHan').prop('disabled', false);
                else
                    $('#NgayHetHan').prop('disabled', true);
            });
            //autocomplete
            $("input[type='text']").each(function () {
                $(this).attr("autocomplete", "off");
            });
            //date
            $("input[name='NgayHetHan']").datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                yearRange: "-5:+5"
            });
            //select file
            $('.custom-file-input').on("change", function () {
                var fileLabel = $(this).next('.custom-file-label');
                var files = $(this)[0].files;
                if (files.length > 1) {
                    fileLabel.html(files.length + ' files selected');
                }
                else if (files.length == 1) {
                    fileLabel.html(files[0].name);
                }
            });
        });
    </script>

}

@using (Html.BeginForm("Edit", "CongVanDen", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary">Sửa Công Văn Đến</h6>
            <a href="@Url.Action("Index", "CongVanDen")" class="btn btn-danger">
                Hủy
            </a>
        </div>

        <div class="card-body">
            <div class="user">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.ID)

                <div class="form-group">
                    <nav class="navbar navbar-expand navbar-light bg-light mb-4">
                        <a class="navbar-brand" id="TenDonVi">@Html.DisplayFor(model => model.DonVi.TenDonVi)</a>
                        <ul class="navbar-nav ml-auto">
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    @Html.DisplayNameFor(model => model.DonVi.TenDonVi)
                                </a>
                                <div class="dropdown-menu dropdown-menu-right animated--grow-in" id="navbarDropdownDonVi" aria-labelledby="navbarDropdown">
                                    @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.lstDonVi)
                                    {
                                        <a class="dropdown-item" name="@item.Value">@item.Text</a>
                                    }
                                </div>
                            </li>
                        </ul>
                    </nav>
                    <input hidden="hidden" type="text" class="form-control form-control-user" id="IDDonVi" name="IDDonVi" placeholder="@Html.DisplayNameFor(model=>model.IDDonVi)" value="@Html.DisplayFor(model => model.IDDonVi)">
                    @Html.ValidationMessageFor(model => model.IDDonVi, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <nav class="navbar navbar-expand navbar-light bg-light mb-4">
                        <a class="navbar-brand" id="LoaiCV">@Html.DisplayFor(model => model.LoaiCongVan.LoaiCV)</a>
                        <ul class="navbar-nav ml-auto">
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    @Html.DisplayNameFor(model => model.LoaiCongVan.LoaiCV)
                                </a>
                                <div class="dropdown-menu dropdown-menu-right animated--grow-in" id="navbarDropdownLoaiCV" aria-labelledby="navbarDropdown">
                                    @foreach (var item in (IEnumerable<SelectListItem>)ViewBag.lstLoaiCV)
                                    {
                                        <a class="dropdown-item" name="@item.Value">@item.Text</a>
                                    }
                                </div>
                            </li>
                        </ul>
                    </nav>
                    <input hidden="hidden" type="text" class="form-control form-control-user" id="IDLoaiCV" name="IDLoaiCV" placeholder="@Html.DisplayNameFor(model=>model.IDLoaiCV)" value="@Html.DisplayFor(model => model.IDLoaiCV)">
                    @Html.ValidationMessageFor(model => model.IDLoaiCV, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <input type="text" class="form-control form-control-user" id="SoCV" name="SoCV" placeholder="@Html.DisplayNameFor(model => model.SoCV)" value="@Html.DisplayFor(model => model.SoCV)">
                    @Html.ValidationMessageFor(model => model.SoCV, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <input type="text" class="form-control form-control-user" id="TieuDe" name="TieuDe" placeholder="@Html.DisplayNameFor(model => model.TieuDe)" value="@Html.DisplayFor(model => model.TieuDe)">
                    @Html.ValidationMessageFor(model => model.TieuDe, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <input type="text" class="form-control form-control-user" id="NoiDung" name="NoiDung" placeholder="@Html.DisplayNameFor(model => model.NoiDung)" value="@Html.DisplayFor(model => model.NoiDung)">
                    @Html.ValidationMessageFor(model => model.NoiDung, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <input type="text" class="form-control form-control-user" id="ButPhe" name="ButPhe" placeholder="@Html.DisplayNameFor(model => model.ButPhe)" value="@Html.DisplayFor(model => model.ButPhe)">
                    @Html.ValidationMessageFor(model => model.ButPhe, "", new { @class = "text-danger" })
                </div>
                <div hidden="hidden">
                    <div class="form-group">
                        <input type="text" class="form-control form-control-user" id="CreateBy" name="CreateBy" placeholder="@Html.DisplayNameFor(model => model.CreateBy)" value="@Html.DisplayFor(model => model.CreateBy)">
                        @Html.ValidationMessageFor(model => model.CreateBy, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <input type="text" class="form-control form-control-user" id="CreateDate" name="CreateDate" placeholder="@Html.DisplayNameFor(model => model.CreateDate)" value="@Html.DisplayFor(model => model.CreateDate)">
                        @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <input type="text" class="form-control form-control-user" id="ModifyBy" name="ModifyBy" placeholder="@Html.DisplayNameFor(model => model.ModifyBy)" value="@Html.DisplayFor(model => model.ModifyBy)">
                        @Html.ValidationMessageFor(model => model.ModifyBy, "", new { @class = "text-danger" })
                    </div>
                    <div class="form-group">
                        <input type="text" class="form-control form-control-user" id="ModifyDate" name="ModifyDate" placeholder="@Html.DisplayNameFor(model => model.ModifyDate)" value="@Html.DisplayFor(model => model.ModifyDate)">
                        @Html.ValidationMessageFor(model => model.ModifyDate, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*checkbox ngày hết hạn*@
                <div class="form-group row">
                    <div class="col-sm-auto">
                        <div class="custom-control custom-checkbox">
                            <input type="checkbox" class="custom-control-input" id="customCheck1" name="HetHan" value="true" @(Model.HetHan ? "checked=\"checked\"" : "")>
                            <label class="custom-control-label" for="customCheck1">Ngày Hết Hạn</label>
                        </div>
                    </div>
                    <div class="col-sm-auto">
                        <input type="text" class="form-control form-control-user" id="NgayHetHan" name="NgayHetHan" placeholder="@Html.DisplayNameFor(model=>model.NgayHetHan)" disabled="disabled" value="@Html.DisplayFor(model => model.NgayHetHan)">
                        <span>@Html.ValidationMessageFor(model => model.NgayHetHan, "", new { @class = "text-danger" })</span>
                    </div>

                </div>
                @*checkbox Mật, Khẩn*@
                <div class="form-group">
                    <div class="custom-control custom-checkbox">
                        <div>
                            <div style="float: left;">
                                <input type="checkbox" class="custom-control-input" id="customCheck21" name="Mat" value="true" @(Model.Mat ? "checked=\"checked\"" : "")>
                                <label class="custom-control-label" for="customCheck21">Mật</label>
                            </div>
                            <div style="float: right;">
                                <input type="checkbox" class="custom-control-input" id="customCheck22" name="Khan" value="true" @(Model.Khan ? "checked=\"checked\"" : "")>
                                <label class="custom-control-label" for="customCheck22">Khẩn</label>
                            </div>
                        </div>
                    </div>
                </div>
                @*upload files*@
                <div class="form-group row">
                    <label class="col-sm-auto">File</label>
                    <div class="col-sm-auto">
                        <div class="custom-file">
                            <input type="file" name="file" multiple class="form-control custom-file-input">
                            <label class="custom-file-label">Chọn File</label>
                        </div>
                    </div>
                </div>
                @*Show File*@
                <table>
                    @foreach (var itemA in Model.CongVanDen_Hinh)
                    {
                        <tr>
                                <td style="max-width:250px">
                                    <a href="@Url.Action("viewFile", "CongVanDen",new { ID = itemA.ID })">@itemA.FileName</a>
                                </td>
                                <td>
                                    <a href="@Url.Action("downloadFile", "CongVanDen",new { ID = itemA.ID })" class="btn btn-info">Tải</a>
                                    <a href="@Url.Action("deleteFile", "CongVanDen",new { ID = itemA.ID })" class="btn btn-danger" onclick="return confirm('Bạn có chắc chắn xóa?');">Xóa</a>
                                </td>
                        </tr>
                    }
                </table>
                <br />
                <div class="text-center">
                    <input type="submit" value="Lưu" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
}
